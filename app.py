import matplotlib.pyplot as plt
import numpy as np
from utils import generate_unique_colors, time_to_decimal, split_image

# Данные для всех автобусов и троллейбусов (время в часах и минутах)
transport_times = {
    'Автобус 3а (вокзал)': ["6:14", "6:40", "7:47", "8:10", "9:20", "9:47", "11:21", "11:54", "12:58", "13:24", "14:30", "14:58", "16:04", "16:34", "17:38", "18:04", "19:33", "20:00", "21:03", "21:32"],
    'Автобус 3в (автобусный парк №6)': ["6:14", "6:40"],
    'Автобус 19 (идет по аграрной на вокзал)': ["5:55", "6:32", "7:09", "7:46", "8:23", "9:02", "9:41", "10:56", "11:35", "12:14", "12:53", "13:32", "14:11", "14:52", "15:31", "16:10", "16:49", "17:28", "18:07", "18:46", "20:31"],
    'Автобус 28 (вокзал)': ["10:22", "12:23", "14:43", "16:23"],
    'Автобус 73 (вокзал)': ["7:31", "8:48", "10:14", "14:39", "15:59", "17:23", "18:42"],
    'Автобус 120 (автобусный парк №6)': ["19:27", "21:52", "22:29", "22:55"],
    'Автобус 130 (пред. Горэлектротранспорт)': ["11:30", "19:57"],
    'Троллейбус 26 (вокзал)': ["07:23", "08:05", "08:56", "09:39", "10:29", "11:13", "12:10", "12:41", "13:39", "13:50", "15:23", "16:18", "17:03", "17:56"]
}

# Устанавливает имя файла для сохранения графика
output_filename = 'transport_sv.png'

# Устанавливает одинаковый маркер для всех
marker = 'o'

# Получает уникальные цвета
colors = generate_unique_colors(len(transport_times))

# Создает новую фигуру (график) с заданными размерами (шириной 60 дюймов и высотой 8 дюймов)
plt.figure(figsize=(60, 8))

# Добавляет точки на графике для каждого транспорта и подписи времени
for i, (transport, times) in enumerate(transport_times.items(), start=1):
    decimal_times = [time_to_decimal(t) for t in times]
    plt.scatter(decimal_times, [i] * len(decimal_times), label=transport, color=colors[i - 1], s=100, marker=marker)
    for j, time in enumerate(times):
        plt.text(decimal_times[j] + 0.03, i, time, fontsize=8, ha='left')

# Настраиват оси графика
plt.yticks(range(1, len(transport_times) + 1), transport_times.keys())

# Создает метки времени на графике с интервалом в 5 минут
time_labels = np.arange(5.5, 23.5, 10 / 60)
plt.xticks(time_labels, labels=[f"{int(hour)}:{int((hour - int(hour)) * 60):02d}" for hour in time_labels], fontsize=8)

# Устанавливает пределы оси X на графике
plt.xlim(5.5, 23.5)

# Устанавливает подписи осей и заголовок на графике
plt.xlabel('Время отправления')
plt.ylabel('Тип транспорта')
plt.title('Расписание отправки транспорта с остановки "Новая жизнь" (конечная) в выходные дни')

# Добавляет легенду за пределами графика
plt.legend(bbox_to_anchor=(1.01, 1), loc='upper left')

# Включает отображение сетки на графике
plt.grid(True)

# Настраивает автоматически параметры размещения элементов на графике, 
# чтобы они не перекрывались и были хорошо видны
plt.tight_layout()

# Сохраняет график в файл
plt.savefig(output_filename, dpi=300, bbox_inches='tight')

# Показывает график
# По умолчанию выключена, чтобы включить нужно раскомментировать функцию
#plt.show()

# Разрезает изображение на части для печати на A4
# По умолчанию выключена, чтобы включить нужно раскомментировать функцию
#split_image(output_filename)